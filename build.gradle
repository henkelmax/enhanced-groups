buildscript {
    repositories {
        maven { url = 'https://maven.maxhenkel.de/repository/public' }
        mavenLocal()
    }
    dependencies {
        classpath group: 'de.maxhenkel.forge-update', name: 'forge-update', version: '1.0.4'
    }
}

plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id "com.github.johnrengelman.shadow" version "7.1.0"
    id 'com.modrinth.minotaur' version '2.+'
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

apply plugin: 'forge-update'

sourceCompatibility = JavaLanguageVersion.of(java_version as int)
targetCompatibility = JavaLanguageVersion.of(java_version as int)

archivesBaseName = archives_base_name
version = mod_version
group = maven_group

repositories {
    mavenCentral()
    maven {
        name = "henkelmax.public"
        url = 'https://maven.maxhenkel.de/repository/public'
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    mavenLocal()
}

runClient.doFirst {
    args = ['--username', "henkelmax${new Random().nextInt(1000)}"]
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"

    Set<String> apiModules = [
            "fabric-api-base",
            "fabric-command-api-v2",
            "fabric-networking-api-v1"
    ]

    apiModules.forEach {
        include(modImplementation(fabricApi.module(it, fabric_version)))
    }

    modRuntimeOnly "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    implementation "de.maxhenkel.configbuilder:configbuilder:${configbuilder_version}"
    shadow "de.maxhenkel.configbuilder:configbuilder:${configbuilder_version}"

    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    implementation "de.maxhenkel.voicechat:voicechat-api:${voicechat_api_version}"

    modRuntimeOnly "maven.modrinth:simple-voice-chat:fabric-${voicechat_dependency}"

    modImplementation fileTree(dir: 'libs', include: '*.jar')
}

processResources {
    inputs.property "version", version

    filesMatching("fabric.mod.json") {
        expand "version": mod_version,
                "java_version": java_version,
                "minecraft_dependency": minecraft_dependency,
                "loader_version": loader_version,
                "fabric_version": fabric_version,
                "voicechat_dependency": voicechat_dependency
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = java_version as int
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    classifier 'shadow-dev'
    relocate 'de.maxhenkel.configbuilder', "de.maxhenkel.${mod_id}.configbuilder"
}

prepareRemapJar {
    dependsOn shadowJar
}

remapJar {
    inputFile = shadowJar.archiveFile.get()
}

curseforge {
    apiKey = file('curseforge_api_key.txt').exists() ? file('curseforge_api_key.txt').text : ''
    project {
        id = curse_id
        changelogType = 'markdown'
        changelog = file('changelog.md')
        releaseType = release_type
        addGameVersion curseforge_minecraft_version
        addGameVersion "Fabric"
        addGameVersion "Java 17"
        mainArtifact(file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar")) {
            displayName = "[FABRIC][${minecraft_version}] ${mod_name} ${mod_version}"
            relations {
                requiredDependency 'simple-voice-chat'
            }
        }
        afterEvaluate {
            uploadTask.dependsOn(remapJar)
        }
    }
    options {
        forgeGradleIntegration = false
    }
}

tasks.modrinth.configure({
    group = 'upload'
})
tasks.modrinthSyncBody.configure({
    group = 'upload'
})

modrinth {
    token = file("${rootDir}/modrinth_token.txt").exists() ? file("${rootDir}/modrinth_token.txt").text : ''
    projectId = modrinth_id
    versionNumber = "fabric-${mod_version}"
    versionName = "[FABRIC][${minecraft_version}] ${mod_name} ${mod_version}"
    uploadFile = remapJar
    versionType = release_type.toUpperCase()
    changelog = file("changelog.md").text
    gameVersions = [minecraft_version]
    loaders = ['fabric']
    dependencies {
        required.project "9eGKb6K1" // Simple Voice Chat
    }
    syncBodyFrom = file("readme.md").text
}
tasks.modrinth.dependsOn(remapJar)

forgeUpdate {
    def messages = []
    file('changelog.md').eachLine { String line ->
        if (line.trim().startsWith('-')) {
            messages.add(line.replaceFirst('-', '').trim())
        }
    }

    serverURL = 'https://update.maxhenkel.de/'
    apiKey = file('forge_update_api_key.txt').exists() ? file('forge_update_api_key.txt').text : ''
    modID = mod_id
    gameVersion = minecraft_version
    modLoader = "fabric"
    modVersion = mod_version
    updateMessages = messages
    releaseType = release_type
    tags = recommended == 'true' ? ['recommended'] : []
}